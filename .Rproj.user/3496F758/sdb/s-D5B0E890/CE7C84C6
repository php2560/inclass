{
    "collab_server" : "",
    "contents" : "---\nlayout: post\ntitle: \"April 4, 2017  In-Class\"\ntags: [R, RMarkdown, SQL, Github]\n---\n\n\n\n```{r, echo=FALSE}\nknitr::opts_chunk$set(\n  tidy=TRUE,     # display code as typed\n  size=\"small\",\n  eval=F)\n```\n\n\n## Amazon Services\n\nFor the first part of this lab we will work on setting up your own Database on amazon. \n\n\n### Getting started:\n\n- Go to the [DataCamp Course](https://www.datacamp.com/courses/1118/)\n    - Watch the [Setting up Amazon Webservices Video in Chapter 12](https://campus.datacamp.com/courses/php-2560-statistical-computing/5607?ex=4)\n    - Watch the [Creating a Database in AWS](https://campus.datacamp.com/courses/php-2560-statistical-computing/5607?ex=5)\n    - Watch the [Connecting into your AWS database](https://campus.datacamp.com/courses/php-2560-statistical-computing/5607?ex=5)\n- Follow the steps below to work with this database.\n\n\nThe goal will be to use this lab to work on the titanic dataset. The code below is similar to how you will connect. \n\n```{R}\nlibrary(RMySQL)\ncon <- dbConnect(MySQL(),\n                 user = 'php2560',\n                 password = 'password',\n                 host = 'php2560.ca5lkwatfvxo.us-east-1.rds.amazonaws.com',\n                 dbname='titanic')\n```\n.\n\n```{R}\nquery <- \"show tables;\"\ndbGetQuery(con, query)\n```\n\n1. Go to Kaggle and downlaod the titanic datasets:\n    - [https://www.kaggle.com/c/titanic/data](https://www.kaggle.com/c/titanic/data)\n    \n\n\n2. Combine the csv files and then read them into R\n\n```{r}\ntitanic <- read.table(\"path/to/file/titanic.csv\", header=TRUE, sep=\",\")\n```\n\n3. Create a table in MySQL from this data. Name it `titanic_yourlastname`:\n\n```{r}\ndbWriteTable(con, \"titanic_yourlastname\", titanic)\n```\n\n4. Now what tables are in this database?\n\n\n\n## Basic usage of commands\n\nWe will start to use a list of commands that would be commonly used in MySQL:\n\nThese are:\n\n- show tables;\n- describe titanic_yourlastname;\n- select name, pclass, age, sex from titanic limit 10;\n \n\n\nWe can run any of these commands as follow:\n\n```\nquery <- \"show tables;\"\ndbGetQuery(con, query)\n```\n\nTry these commands and test this out. \n\n\n## R and MySQL\n\n5. Run the following SQL command. Before doing so describe what this is asking\n```\nselect pclass, survived, avg(age) as avg_age from titanic_yourlastname   \n   group by pclass, survived;\n```\n\n\n6.  Run the following SQL command. Before doing so describe what this is asking\n```\nselect pclass, survived, avg(age) as avg_age from titanic_yourlastname\n   where survived=1\n   group by pclass, survived;\n```\n\n\n7. Run the following SQL command. Before doing so describe what this is asking\n```\nselect name, pclass, survived, age from titanic_yourlastname \n   where name regexp '^.sen.+';\n   ```\n\n8. Run the following SQL command. Before doing so describe what this is asking\n```\nselect name, pclass, survived, age from titanic_yourlastname \n   where name regexp 'Jakob.*$';\n```\n\n9.  Run the following SQL commands. What is different about them? What do they return?\n```\nselect name, pclass, survived, age from titanic_yourlastname \n   where name regexp 'Ivar.*$';\n   ```\n   \n```\nselect name, pclass, survived, age from titanic_yourlastname \n   where name regexp ',.*Ivar.*$';\n```\n\n\n10. We can also plot data from this:\n```{r}\nmyQuery <- \"select pclass, avg(fare) as avg_fare from titanic_yourlastname\n              group by pclass;\"\nmyData <- dbGetQuery(con, myQuery)\nlibrary(ggplot2)\nggplot(myData, aes(pclass, avg_fare)) + geom_bar(stat=\"identity\")\n```\n\n\n\n## More challenging\n\n11. Create a data frame with:\n- `pclass`\n- `sex`\n- `age`\n- `fare`\n- `survived`\n- `parch`\nOnly for people who did not survive. \n\n12. Create a graph of the average survival over the different classes. Make two distinct lines for male and female passengers. Create this plot using ggplot. \n\n\n\n\n\n\n## Using MonetDbLite\n\nClick on the link below to access the github repository for the rest of the lab:\n\n- [In Class github](https://classroom.github.com/assignment-invitations/d5d68f44117ab30bcf0dbda90b040e1b)",
    "created" : 1491763712170.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1503491494",
    "id" : "CE7C84C6",
    "lastKnownWriteTime" : 1491763746,
    "last_content_update" : 1491763746055,
    "path" : "C:/Users/adam_/Dropbox/Brown/PHP2560/inclass/_posts/2017-04-04-in-class-lab.md",
    "project_path" : "_posts/2017-04-04-in-class-lab.md",
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "markdown"
}